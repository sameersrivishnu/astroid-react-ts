{"ast":null,"code":"import axios from \"axios\";\nimport { STATUS_CODE, BASE_URL } from \"./../Helpers/Constants\"; // Request Methods\n\nconst METHOD = {\n  GET: \"get\",\n  POST: \"post\",\n  PUT: \"put\",\n  DELETE: \"delete\"\n};\n/*\n * API controller that for handling the request\n */\n\nclass API {\n  constructor() {\n    this.isLoggedIn = false;\n    this.userData = {};\n    this.userToken = null;\n    this.baseURL = BASE_URL;\n  }\n\n  get(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.GET, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  post(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.POST, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  put(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.PUT, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  delete(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.DELETE, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  } // Main function with hold the axios request param\n\n\n  api(method, url, data) {\n    return new Promise((resolve, reject) => {\n      let axiosConfig = {};\n      axiosConfig.method = method;\n      axiosConfig.url = this.baseURL + url;\n      axiosConfig.headers = this.setHeaders(data);\n\n      if (data) {\n        if (data.params) axiosConfig.params = data.params;\n        if (data.data) axiosConfig.data = data.data;\n      }\n\n      axios(axiosConfig).then(response => {\n        if (response && response.status === STATUS_CODE.INTERNAL_SERVER_ERROR) {\n          alert(\"Something went wrong!!\");\n        } else {\n          resolve(response.data);\n        }\n      }).catch(error => {\n        alert(\"Something went wrong!! Please enter valid Data\"); //DEFAULT ERROR HANDLING\n      });\n    });\n  } // Set the header for request\n\n\n  setHeaders(data) {\n    let headers = {};\n    headers[\"accept-language\"] = \"en\";\n    headers[\"Content-Type\"] = \"application/json\";\n\n    if (data) {\n      if (data.isMultipart) {\n        headers[\"Content-Type\"] = \"multipart/form-data\";\n      }\n\n      if (data.headers) {\n        for (var key in data.headers) {\n          if (data.headers.hasOwnProperty(key)) {\n            headers[key] = data.headers[key];\n          }\n        }\n      }\n    }\n\n    return headers;\n  }\n\n}\n\nexport default API;","map":{"version":3,"sources":["/home/sameer/sameer_projects/reactjs/my-app/src/API/API.tsx"],"names":["axios","STATUS_CODE","BASE_URL","METHOD","GET","POST","PUT","DELETE","API","constructor","isLoggedIn","userData","userToken","baseURL","get","url","data","Promise","resolve","reject","api","then","response","catch","error","console","log","post","put","delete","method","axiosConfig","headers","setHeaders","params","status","INTERNAL_SERVER_ERROR","alert","isMultipart","key","hasOwnProperty"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { STATUS_CODE, BASE_URL } from \"./../Helpers/Constants\";\n\n// Request Methods\nconst METHOD = {\n  GET: \"get\",\n  POST: \"post\",\n  PUT: \"put\",\n  DELETE: \"delete\"\n};\n\n/*\n * API controller that for handling the request\n */\nclass API {\n  isLoggedIn = false;\n  userData = {};\n  userToken = null;\n\n  constructor() {\n    this.baseURL = BASE_URL;\n  }\n\n  get(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.GET, url, data)\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    });\n  }\n\n  post(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.POST, url, data)\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    });\n  }\n\n  put(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.PUT, url, data)\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    });\n  }\n\n  delete(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.DELETE, url, data)\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    });\n  }\n\n  // Main function with hold the axios request param\n  api(method, url, data) {\n    return new Promise((resolve, reject) => {\n      let axiosConfig = {};\n      axiosConfig.method = method;\n      axiosConfig.url = this.baseURL + url;\n\n      axiosConfig.headers = this.setHeaders(data);\n      if (data) {\n        if (data.params) axiosConfig.params = data.params;\n\n        if (data.data) axiosConfig.data = data.data;\n      }\n\n      axios(axiosConfig)\n        .then(response => {\n          if (\n            response &&\n            response.status === STATUS_CODE.INTERNAL_SERVER_ERROR\n          ) {\n            alert(\"Something went wrong!!\");\n          } else {\n            resolve(response.data);\n          }\n        })\n        .catch(error => {\n          alert(\"Something went wrong!! Please enter valid Data\");\n          //DEFAULT ERROR HANDLING\n        });\n    });\n  }\n\n  // Set the header for request\n  setHeaders(data) {\n    let headers = {};\n    headers[\"accept-language\"] = \"en\";\n    headers[\"Content-Type\"] = \"application/json\";\n\n    if (data) {\n      if (data.isMultipart) {\n        headers[\"Content-Type\"] = \"multipart/form-data\";\n      }\n\n      if (data.headers) {\n        for (var key in data.headers) {\n          if (data.headers.hasOwnProperty(key)) {\n            headers[key] = data.headers[key];\n          }\n        }\n      }\n    }\n\n    return headers;\n  }\n}\n\nexport default API;\n"]},"metadata":{},"sourceType":"module"}